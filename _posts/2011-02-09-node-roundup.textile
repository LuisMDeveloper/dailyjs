---
layout: post
title: "Node Roundup: 0.3.8, node-database-cleaner, node-config"
author: Alex Young
categories: 
- node
- server
---

Welcome to the Node Roundup. Send in your apps and libraries using our "contact form":/contact.html or "@dailyjs":http://twitter.com/dailyjs.

h3. Node 0.3.8

"Node 0.3.8":http://groups.google.com/group/nodejs/browse_frm/thread/355a639e5357abd1 is out.  Here's the change log with some annotations:

* Add <code>req.abort()</code> for client side requests
* Add <code>exception.code</code> for easy testing.  For example: <code>if (err.code == 'EADDRINUSE');</code> 
* Add <code>process.stderr</code>
* <code>require.main</code> is the main module. ("Isaac Schlueter":http://foohack.com/) 
* dgram: <code>setMulticastTTL</code>, <code>setMulticastLoopback</code> and <code>addMembership</code>. ("Joe Walnes":http://joewalnes.com/) 
* Fix throttling in TLS connections 
* Add <code>socket.bufferSize</code>
* MinGW improvements ("Bert Belder":https://github.com/piscisaureus) 
* Upgrade V8 to 3.1.1

Download: "nodejs.org/dist/node-v0.3.8.tar.gz":http://nodejs.org/dist/node-v0.3.8.tar.gz
Website: "nodejs.org/docs/v0.3.8":http://nodejs.org/docs/v0.3.8
Documentation: "nodejs.org/docs/v0.3.8/api":http://nodejs.org/docs/v0.3.8/api

h3. node-database-cleaner

"node-database-cleaner":https://github.com/emerleite/node-database-cleaner (MIT Licensed) by Emerson Macedo knows how to wipe databases.  This is useful for writing tests that test against a test database -- you might have seen me do something similar in our Node tutorials.  It currently works with Mongo.

h3. node-config

"node-config":https://github.com/lorenwest/node-config (Apache License 2.0) by Loren West is a configuration management library for Node.  It can be used to provide consistent access to configuration variables, but also makes it easy to override defaults with values from command-line options or configuration files.

Defining configurations looks like this:

{% highlight javascript %}
// Customers.js - Customer management utilities

// Configuration parameters and default values
var config = require('config')('Customers', {
  dbHost: 'localhost',
  dbPort: 5984,
  dbName: 'customers',
  syncFrequency: 60
});
{% endhighlight %}

Which makes this possible:

{% highlight sh %}
$ node billing.js -config smokeTest.js -Customers.dbPort 5985
{% endhighlight %}

One useful trick Loren points out in the README is programmatic configuration through <code>argv</code>:

{% highlight javascript %}
process.argv.push('-Customers.dbPort', 5994);
require('Customers');
{% endhighlight %}


