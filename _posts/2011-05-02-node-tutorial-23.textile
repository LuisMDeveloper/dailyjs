---
layout: post
title: "Node Tutorial Part 23: npm 1.0"
author: Alex Young
categories: 
- server
- node
- tutorials
- lmawa
- nodepad
- npm
---

Welcome to part 23 of _Let's Make a Web App_, a tutorial series about building a web app with "Node":http://nodejs.org/.  This series will walk you through the major areas you'll need to face when building your own applications.  These tutorials are tagged with "lmawa":/tags.html#lmawa.

<a href="#" class="showPrevious">Click to show previous tutorials</a>.

<div class="previous" style="display: none">
* "Part 1: Introduction":http://dailyjs.com/2010/11/01/node-tutorial/ 
* "Part 2: Installation and Skeleton App":http://dailyjs.com/2010/11/08/node-tutorial-2/, source code commit: "4ea936b":https://github.com/alexyoung/nodepad/commit/4ea936b4b426012528fc722c7576391b48d5a0b7
* "Part 3: RESTful Methods and Testing":http://dailyjs.com/2010/11/15/node-tutorial-3/, source code commit: "39e66cb":https://github.com/alexyoung/nodepad/commit/39e66cb9d11a67044495beb0de1934ac4d9c4786
* "Part 4: Templates, Partials, Creating and Editing Documents":http://dailyjs.com/2010/11/22/node-tutorial-4/, source code commit: "f66fdb":https://github.com/alexyoung/nodepad/commit/f66fdb5c3bebdf693f62884ffc06a40b93328bb5
* "Part 5: Authentication, Sessions, Access Control Middleware":http://dailyjs.com/2010/12/06/node-tutorial-5/, source code commit: "03fe9b":https://github.com/alexyoung/nodepad/tree/03fe9b272fea1beb98ffefcf5f7ed226c81c49fd
* "Part 6: Interface Basics":http://dailyjs.com/2010/12/20/node-tutorial-6/, source code commit: "f2261c":https://github.com/alexyoung/nodepad/tree/f2261c510c987b35df1e6e000be6e1e591cd9d6d
* "Part 7: Node Library Versions, Jade Tricks, Error Pages":http://dailyjs.com/2010/12/27/node-tutorial-7/, source code commit: "929f5":https://github.com/alexyoung/nodepad/tree/929f5642ca1b2fa664df517457e056c92490d892
* "Part 8: Flash Messages and Helpers":http://dailyjs.com/2011/01/03/node-tutorial-8/, source code commit: "841a49":https://github.com/alexyoung/nodepad/tree/841a493c03f0421dd1a2279fccac3fbcf1e17b1f
* "Part 9: Remember Me":http://dailyjs.com/2011/01/10/node-tutorial-9/, source code commit: "1904c":https://github.com/alexyoung/nodepad/tree/1904c6b7f95d708474a5d42e8cdfd40e96243a7a
* "Part 10: Markdown":http://dailyjs.com/2011/01/24/node-tutorial-10/, source code commit: "11d33":https://github.com/alexyoung/nodepad/tree/11d33e19066e76c8559857fb780ac9fd1ecf68ac
* "Part 11: Better Testing":http://dailyjs.com/2011/01/31/node-tutorial-11/, source code commit: "6a269ce":https://github.com/alexyoung/nodepad/tree/6a269ce4ddb6c7dc78598b488c93b38828fb5763
* "Part 12: Updating Mongoose":http://dailyjs.com/2011/02/07/node-tutorial-12/, source code commit: "2a8725":https://github.com/alexyoung/nodepad/tree/2a8725f089ef052ec8b4ccfed8f6fbece70a606a
* "Part 13: Stylus":http://dailyjs.com/2011/02/14/node-tutorial-13/, source code commit: "0a70e40":https://github.com/alexyoung/nodepad/tree/0a70e40cafd982c1f2421ecf16caa887fc49ae39
* "Part 14: Email":http://dailyjs.com/2011/02/21/node-tutorial-14/, source code commit: "2e81a7b":https://github.com/alexyoung/nodepad/tree/2e81a7b8a1863db75485e4c49af5753a21266178
* "Part 15: Node Versions, npm Publishing":http://dailyjs.com/2011/02/28/node-tutorial-15/, source code commit: "89abea1":https://github.com/alexyoung/nodepad/tree/89abea12171de333159ef2be89890e9c56eb86af
* "Part 16: Updating to Node 0.4.2 and Express 2":http://dailyjs.com/2011/03/14/node-tutorial-16/, source code commit: "19fbb2":https://github.com/alexyoung/nodepad/tree/19fbb2e15dd2e247397e9d9d1caea3a4800a865e
* "Part 17: UI Improvements":http://dailyjs.com/2011/03/21/node-tutorial-17/, source code commit: "5c5fb5c":https://github.com/alexyoung/nodepad/tree/5c5fb5c5f5ad296f192dc5ca49c91aa340efe465
* "Part 18: Full Text Search":http://dailyjs.com/2011/03/28/node-tutorial-18/, source code commit: "ceb9b32":https://github.com/alexyoung/nodepad/tree/ceb9b32a09dec3a52956bc9c631b68487b34bf23
* "Part 19: Backbone.js":http://dailyjs.com/2011/04/04/node-tutorial-19/, source code commit: "8e86240":https://github.com/alexyoung/nodepad/tree/8e8624073cc27fe377d8417159d69a9f3318cc22
* "Part 20: Backbone.js Persistence":http://dailyjs.com/2011/04/11/node-tutorial-20/, source code commit: "7d5cc3d":https://github.com/alexyoung/nodepad/tree/7d5cc3d4631efee86719e35522f514dbc302c193
* "Part 21: Connection Management":http://dailyjs.com/2011/04/18/node-tutorial-21/, source code commit: "2fde220":https://github.com/alexyoung/nodepad/tree/2fde2201b663d01ade803c8d76c66e329d6acef5
* "Part 22: Searching with Backbone.js":http://dailyjs.com/2011/04/25/node-tutorial-21/, source code commit: "2b8e083":https://github.com/alexyoung/nodepad/tree/2b8e083a889e3d7b32a81e04689385101e0780f9
</div>

h3. npm 1.0

I upgraded to npm 1.0.3 recently.  It generated a list of packages that were incompatible, I haven't bothered reinstalling them yet.

Isaac's installation instructions seem to have solidified at:

{% highlight sh %}
curl http://npmjs.org/install.sh | sh
{% endhighlight %}

... but "read the npm README":https://github.com/isaacs/npm#readme before doing anything!

h3. Changes in Nodepad

It takes a while to get used to npm 1.x, but I like the changes.  A big change is the default installation path: running <code>npm install package</code> will install _package_ in the local <code>./node_modules</code> folder.

What this means for Nodepad is we no-longer need the <code>require('package@version')</code> syntax.

I've updated Nodepad to work with npm 1.0: "commit 52e6b1":https://github.com/alexyoung/nodepad/tree/52e6b134cac0060d673bbf6e15c519dc5273e0a0.


h3. npm install

From Nodepad's directory, running <code>npm install</code> will build and install the dependencies to <code>./node_modules</code>.  That means it's completely self-contained from everything else on your system.  Running <code>npm -g install</code> will install all of the dependencies in <code>NODE_PATH/nodepad/</code> -- again, making the dependencies self-contained.

Using Nodepad is now fairly simple:

{% highlight sh %}
$ git clone git://github.com/alexyoung/nodepad.git
$ cd nodepad
$ npm install
$ mongod
$ node app.js
{% endhighlight %}

This is very similar to how <code>npm bundle</code> used to work.  When using Express apps written by other people, their documentation may suggest running <code>npm bundle</code>, but <code>npm install</code> should work.

h3. Search vs. List

The <code>npm ls</code> command used to search available packages.  It now lists local packages:

{% highlight text %}
$ npm ls -g
├─┬ express@2.3.2 
│ ├── connect@1.4.0 
│ ├── mime@1.2.1 
│ └── qs@0.1.0 
├── highlight@0.1.0 
├── jade@0.10.6 
├── markdown@0.2.1 
├── n@0.4.1 
{% endhighlight %}

Using <code>npm search</code> will search remote packages:

{% highlight text %}
$ npm search nodepad
nodepad  A notepad written with Node  =alexyoung
{% endhighlight %}

h3. Why the Change?

Isaac has been blogging and discussing npm 1.0 for some time on the "Node blog":http://blog.nodejs.org/ and "npm discussion group":http://groups.google.com/group/npm-/.  A major contributing factor is Node's 0.4 changes to the module loading system.  These changes were mentioned in the "Node 0.4 announcement":http://nodejs.org/v0.4_announcement.html:

bq. <code>require()</code> now has a primitive understanding of package.json. It looks for the main script. This allows require() to work on package directories directly.

And:

bq. A specially named directory, node_modules/, is searched in the current directory for any modules. This will hopefully encourage programmers to bundle modules rather than rely on a global namespace.

It might feel awkward to have to adapt existing applications to work with npm 1.0, but the changes should be minimal and should make module management easier for everyone.


