---
layout: post
title: "Node Roundup: 0.4.10, Geocoding, Bunker"
author: Alex Young
categories: 
- node
- modules
- testing
- geo
---

<div class="intro">
You can send your node modules and articles in for review through our "contact form":/contact.html or "@dailyjs":http://twitter.com/dailyjs.
</div>

h3. Node 0.4.10

"Node 0.4.10":http://blog.nodejs.org/2011/07/20/node-v0-4-10/ has been released.  This version mainly contains bug fixes:

* "#394":https://github.com/joyent/node/issues/394 Fix Buffer drops last null character in UTF-8
* "#829":https://github.com/joyent/node/issues/829 Backport r8577 from V8 (Ben Noordhuis)
* "#877":https://github.com/joyent/node/issues/829 Don't wait for HTTP Agent socket pool to establish connections
* "#915":https://github.com/joyent/node/issues/915 Find kqueue on FreeBSD correctly (Brett Kiefer)
* "#1085":https://github.com/joyent/node/issues/1085 HTTP: Fix race in abort/dispatch code (Stefan Rusu)
* "#1274":https://github.com/joyent/node/pull/1274 debugger improvement (Yoshihiro Kikuchi)
* "#1291":https://github.com/joyent/node/pull/1291 Properly respond to HEAD during end(body) hot path (Reid Burke)
* "#1304":https://github.com/joyent/node/issues/1304 TLS: Fix race in abort/connection code (Stefan Rusu)
* "#1360":https://github.com/joyent/node/issues/1360 Allow _ in url hostnames
* Revert 37d529f8 - unbreaks debugger command parsing.
* "Bring back global execScript":https://github.com/joyent/node/commit/073fbea0f5776ba3733075a283c094af85378612 ("it was removed from v8":http://codereview.chromium.org/7060008)

h3. Geocoder

"Geocoder":http://blog.stephenwyattbush.com/2011/07/16/geocoding-with-nodejs/ (GitHub: "wyattdanger / geocoder":https://github.com/wyattdanger/geocoder, "License":https://github.com/wyattdanger/geocoder/blob/master/LICENSE, npm: _geocoder_) by Stephen Wyatt Bush is a module for using Google's geocoding and reverse geocoding services:

{% highlight javascript %}
var geocoder = require('geocoder');

geocoder.geocode("Atlanta, GA", function(data) {
  // do stuff with data
});

// Reverse Geocoding
geocoder.reverseGeocode(33.7489, -84.3789, function(data) {
  // do stuff with data
});
{% endhighlight %}

He's planning to add error handling support, although I'd have expected the callback signature to be <code>err, data</code> rather than <code>data, err</code>.

h3. Bunker

!/images/posts/bunker.png!

"Bunker":https://github.com/substack/node-bunker (npm: _bunker_, License: _MIT/X11_) by James Halliday generates code coverage reports using the author's "burrito":https://github.com/substack/node-burrito library.

There's a simple example that demonstrates the project's event-based API:

{% highlight javascript %}
var bunker = require('bunker');
var b = bunker('var x = 0; for (var i = 0; i < 30; i++) { x++ }');

var counts = {};

b.on('node', function (node) {
    if (!counts[node.id]) {
        counts[node.id] = { times : 0, node : node };
    }
    counts[node.id].times ++;
});

b.run();

Object.keys(counts).forEach(function (key) {
    var count = counts[key];
    console.log(count.times + ' : ' + count.node.source());
});
{% endhighlight %}

This is actually a native JavaScript parser based on AST data generated by "UglifyJS":https://github.com/mishoo/UglifyJS.  Bunker doesn't currently provide a generalised script for analysing your project's test coverage; for something like that TJ Holowaychuk's "node-jscoverage":https://github.com/visionmedia/node-jscoverage can work in conjunction with a test framework like "Expresso":https://github.com/visionmedia/expresso.

