---
layout: post
title: "Traits"
author: Alex Young
categories: 
- libraries
- organisation
---

"Traits.js":http://traitsjs.org/ (Apache License 2.0) is a library for creating modular components using "traits":http://en.wikipedia.org/wiki/Trait_(computer_science).  Traits can be used to recombine reusable code in a similar way to mixins without introducing traditional classes.  Within the library, traits are like JavaScript functions, in that they're first-class and anonymous.

<code>Trait.compose</code> can be used to combine a set of traits, which can then be instantiated with <code>Trait.create</code>.  From the documentation:

bq. Create is similar to the Ecmascript 5 built-in Object.create except that it generates high-integrity, "final" objects.

It also ensures the resulting object is frozen, and <code>this</code> is bound to the instantiated object in all accessors and methods.

As you can see by what <code>create</code> does, this process creates objects that are more strictly controlled than mixin or multiple inheritance-based code.

The "tutorial":http://soft.vub.ac.be/~tvcutsem/traitsjs/tutorial.html has a good example called _An Enumerable Trait_ which helped me get the hang of the basic usage of the library.


